pipeline {
  agent any
  tools {
      maven 'maven'
      // dockerTool 'Docker'  
    }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'cd springCoreDemo && mvn clean package' 
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://172.16.147.131:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd springCoreDemo && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build Docker Image and push to Harbor') {
      environment {
        DOCKER_IMAGE = 'trishantmaharjan/maven-with-docker'
        REGISTRY = 'http://172.16.147.131:8081'
        HARBOR_NAMESPACE = 'ks-devops-harbor'
        HARBOR_CREDENTIAL = credentials('harbor_login')
      }
      steps {
        script {
            sh 'cd springCoreDemo && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            sh 'docker push  $REGISTRY/$HARBOR_NAMESPACE/$dockerImage:devops-test'
        }
      }
    }
  }
}
